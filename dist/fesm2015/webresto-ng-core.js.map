{"version":3,"file":"webresto-ng-core.js.map","sources":["ng://@webresto/ng-core/lib/services/event-message.ts","ng://@webresto/ng-core/lib/services/eventer.service.ts","ng://@webresto/ng-core/lib/services/state.service.ts","ng://@webresto/ng-core/lib/config.ts","ng://@webresto/ng-core/lib/services/net.service.ts","ng://@webresto/ng-core/lib/services/resto-storage.service.ts","ng://@webresto/ng-core/lib/ng-core.module.ts","ng://@webresto/ng-core/lib/http-interceptors/server-error.interceptor.ts","ng://@webresto/ng-core/lib/http-interceptors/message.interceptor.ts","ng://@webresto/ng-core/lib/http-interceptors/index.ts"],"sourcesContent":["export class EventMessage {\n  type:string;\n  title:string;\n  body:string;\n\n  constructor(type, title, body) {\n    this.type = type;\n    this.title = title;\n    this.body = body;\n  }\n}\n","import { Injectable,EventEmitter } from '@angular/core';\nimport { EventMessage } from './event-message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventerService {\n  eventMessage: EventEmitter<any> = new EventEmitter();\n  eventAction: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  emitMessageEvent(message:EventMessage) {\n    this.eventMessage.emit(message);\n  }\n  emitActionEvent(action:EventMessage) {\n    this.eventAction.emit(action);\n  }\n\n\n  getMessageEmitter() {\n    return this.eventMessage;\n  }\n  getActionEmitter() {\n    return this.eventAction;\n  }\n}\n","import { Injectable,EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  maintenance$: BehaviorSubject<any>;\n\n  constructor() {\n    this.maintenance$ = new BehaviorSubject<any>(null);\n  }\n}\n","import { Inject,Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class Config {\n  url:any;\n  port:number = 80;\n  prefix:string = \"api/\";\n  versionModule = \"0.5\";\n\n  constructor(@Inject('ApiDomain') endpointUrl:BehaviorSubject<any>) {\n    endpointUrl.subscribe(url=>{\n      this.url = url;\n    })  \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config} from '../config';\nimport { HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NetService {\n  config:any;\n\n  constructor(private http:HttpClient, config:Config) {\n    this.config = config;\n  }\n\n  public  get(url:string, isApi:boolean = true):Observable<any> {\n\n    url = isApi\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\n      : this.config.url + url;\n\n    return this.http.get<any>(url)\n      .pipe(\n        retry(3) // retry a failed request up to 3 times\n      );\n  }\n\n  public  put(url:string, data:any, isApi:boolean = true):Observable<any> {\n\n    url = isApi\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\n      : this.config.url + url;\n\n    return this.http.put(url, data);\n\n  }\n\n  public  post(url:string, data:any, isApi:boolean = true):Observable<any> {\n\n    url = isApi\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\n      : this.config.url + url;\n\n    return this.http.post(url, data);\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CookiesStorageService, LocalStorageService,\n  SharedStorageService, NgxStorageEvent\n} from 'ngx-store';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestoStorageService {\n  event:BehaviorSubject<any>;\n\n\n  constructor(private cookiesStorageService:CookiesStorageService,\n              private localStorageService:LocalStorageService,\n              private sharedStorageService:SharedStorageService) {\n    this.initTypeStorage();\n    this.event = new BehaviorSubject({});\n  }\n\n  initTypeStorage() {\n    //  this.cookiesStorageService.set('ola', \"work\");\n    //  this.localStorageService.set(\"ola\",\"work\");\n    //   //  this.sharedStorageService.set(\"ola\",\"work\");\n    //   //  console.log(this.cookiesStorageService.get('ola'))\n    //   console.log(this.localStorageService.get('olaet'))\n    //  console.log(this.sharedStorageService.get('ola'))\n\n  }\n\n  get(typeStorage:string, key:string):string {\n    return this[typeStorage].get(key);\n\n  }\n\n  set(typeStorage:string, key:string, value:string):Observable<any> {\n    return this[typeStorage].set(key, value);\n  }\n\n\n  sub(typeStorage:string, key:string):Observable<any> {\n\n    this[typeStorage].observe()\n      .subscribe((event) => {\n        if (event.key == key) {\n          this.event.next({\"changeKey\": key})\n        }\n\n      });\n    return this.event;\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { WebStorageModule } from 'ngx-store';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class NgCoreModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { EventerService } from '../services/eventer.service';\nimport { EventMessage } from '../services/event-message';\n\nimport { Observable, throwError } from 'rxjs';\nimport { finalize, tap, catchError } from 'rxjs/operators';\nimport { StateService } from \"../services/state.service\";\n\n@Injectable()\nexport class ServerErrorInterceptor implements HttpInterceptor {\n\n  constructor(\n    private eventer:EventerService,\n    private state:StateService\n  ) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler):Observable<HttpEvent<any>> {\n\n    return next.handle(req)\n      .pipe(\n        tap(\n          event => {\n            if(event instanceof HttpResponse) {\n\n              if(event.body.status && event.body.message && event.body.message[0]) {\n                throw new Error(event.body.message[0]);\n              }\n\n            }\n          }\n        ),\n        catchError(this.handleError.bind(this))\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n\n    if(error.error.enable\n      && typeof error.error.title !== 'undefined'\n      && typeof error.error.description !== 'undefined'\n      && typeof error.error.startDate !== 'undefined'\n      && typeof error.error.stopDate !== 'undefined') {\n\n      const currentTime = new Date().getTime(),\n        startTime = new Date(error.error.startDate).getTime(),\n        stopTime = new Date(error.error.stopDate).getTime();\n\n      if(currentTime > startTime && currentTime < stopTime) {\n        this.state.maintenance$.next({\n          title: error.error.title,\n          description: error.error.description\n        });\n      }\n\n      return throwError(error.error);\n    }\n\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else if (error instanceof Error) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.message);\n\n      switch(error.message) {\n        case 'timeout-or-duplicate':\n          return throwError('ÐÑÐ¸Ð±ÐºÐ° ÑÐµÑÐ²ÐµÑÐ° (ÑÐ°Ð¹Ð¼Ð°ÑÑ). ÐÐ¾Ð²ÑÐ¾ÑÐ¸ÑÐµ Ð¿Ð¾Ð¿ÑÑÐºÑ Ð¿Ð¾Ð·Ð¶Ðµ');\n      }\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n\n      if(error.status == 401) {\n        this.eventer.emitMessageEvent(\n          new EventMessage('Unauthorized', '', '')\n        );\n\n        return throwError(\n          error.error && error.error.title\n            ? error.error.title\n            : 'ÐÐµÐ¾Ð±ÑÐ¾Ð´Ð¸Ð¼Ð¾ Ð¿ÑÐ¾Ð¹ÑÐ¸ Ð°Ð²ÑÐ¾ÑÐ¸Ð·Ð°ÑÐ¸Ñ'\n        );\n      }else if((error.status == 400 || error.status == 500)\n        && error.error\n        && error.error.message\n        && error.error.message.title\n        && error.error.message.body) {\n        this.eventer.emitMessageEvent(\n          new EventMessage('error', error.error.message.title, error.error.message.body)\n        );\n      }\n    }\n    // return an observable with a user-facing error message\n    return throwError(error.error);\n  };\n}","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { EventerService } from '../services/eventer.service';\nimport { EventMessage } from '../services/event-message';\n\nimport { Observable, throwError } from 'rxjs';\nimport { finalize, tap, catchError } from 'rxjs/operators';\nimport { StateService } from \"../services/state.service\";\n\n@Injectable()\nexport class MessageInterceptor implements HttpInterceptor {\n\n  constructor(\n    private eventer:EventerService,\n    private state:StateService\n  ) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler):Observable<HttpEvent<any>> {\n\n    return next.handle(req)\n      .pipe(\n        tap(\n          event => {\n            if(event instanceof HttpResponse) {\n              if(event.body.enable\n                && typeof event.body.title !== 'undefined'\n                && typeof event.body.description !== 'undefined'\n                && typeof event.body.startDate !== 'undefined'\n                && typeof event.body.stopDate !== 'undefined') {\n\n                const currentTime = new Date().getTime(),\n                      startTime = new Date(event.body.startDate).getTime(),\n                      stopTime = new Date(event.body.stopDate).getTime();\n\n                if(currentTime > startTime && currentTime < stopTime) {\n                  this.state.maintenance$.next({\n                    title: event.body.title,\n                    description: event.body.description\n                  });\n                }\n              }\n\n\n              if(event.body.message\n                && event.body.message.body\n                && event.body.message.title\n                && event.body.message.type) {\n\n                switch (event.body.message.type) {\n                  case 'info':\n                    this.eventer.emitMessageEvent(\n                      new EventMessage('info', event.body.message.title, event.body.message.body)\n                    );\n                    break;\n                  case 'success':\n                    this.eventer.emitMessageEvent(\n                      new EventMessage('success', event.body.message.title, event.body.message.body)\n                    );\n                    break;\n                  case 'error':\n                    this.eventer.emitMessageEvent(\n                      new EventMessage('error', event.body.message.title, event.body.message.body)\n                    );\n                    break;\n                  case 'warning':\n                    this.eventer.emitMessageEvent(\n                      new EventMessage('warning', event.body.message.title, event.body.message.body)\n                    );\n                    break;\n                }\n\n\n              }\n\n            }\n          }\n        )\n      );\n  }\n}","import { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { ServerErrorInterceptor } from './server-error.interceptor';\nimport { MessageInterceptor } from \"./message.interceptor\";\n\n\nexport const ngCoreHttpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: ServerErrorInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: MessageInterceptor, multi: true }\n];\n\n"],"names":[],"mappings":"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"}
