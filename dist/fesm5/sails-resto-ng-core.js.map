{"version":3,"file":"sails-resto-ng-core.js.map","sources":["ng://@sails-resto/ng-core/lib/services/event-message.ts","ng://@sails-resto/ng-core/lib/services/eventer.service.ts","ng://@sails-resto/ng-core/lib/config.ts","ng://@sails-resto/ng-core/lib/services/net.service.ts","ng://@sails-resto/ng-core/lib/services/resto-storage.service.ts","ng://@sails-resto/ng-core/lib/ng-core.module.ts","ng://@sails-resto/ng-core/lib/http-interceptors/server-error.interceptor.ts","ng://@sails-resto/ng-core/lib/http-interceptors/index.ts"],"sourcesContent":["export class EventMessage {\n  type:string;\n  title:string;\n  body:string;\n\n  constructor(type, title, body) {\n    this.type = type;\n    this.title = title;\n    this.body = body;\n  }\n}\n","import { Injectable,EventEmitter } from '@angular/core';\nimport { EventMessage } from './event-message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventerService {\n  eventMessage: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n  emitMessageEvent(message:EventMessage) {\n    this.eventMessage.emit(message);\n  }\n  getMessageEmitter() {\n    return this.eventMessage;\n  }\n}\n","import { Inject,Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class Config {\n  url:any;\n  port:number = 80;\n  prefix:string = \"api/\";\n  versionModule = \"0.5\";\n\n  constructor(@Inject('ApiDomain') endpointUrl:BehaviorSubject<any>) {\n    endpointUrl.subscribe(url=>{\n      this.url = url;\n    })  \n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Config} from '../config';\nimport { HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NetService {\n  config:any;\n\n  constructor(private http:HttpClient, config:Config) {\n    this.config = config;\n  }\n\n  public  get(url:string, isApi:boolean = true):Observable<any> {\n\n    url = isApi\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\n      : this.config.url + url;\n\n    return this.http.get<any>(url)\n      .pipe(\n        retry(3) // retry a failed request up to 3 times\n      );\n  }\n\n  public  put(url:string, data:any, isApi:boolean = true):Observable<any> {\n\n    url = isApi\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\n      : this.config.url + url;\n\n    return this.http.put(url, data);\n\n  }\n\n  public  post(url:string, data:any, isApi:boolean = true):Observable<any> {\n\n    url = isApi\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\n      : this.config.url + url;\n\n    return this.http.post(url, data);\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CookiesStorageService, LocalStorageService,\n  SharedStorageService, NgxStorageEvent\n} from 'ngx-store';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestoStorageService {\n  event:BehaviorSubject<any>;\n\n\n  constructor(private cookiesStorageService:CookiesStorageService,\n              private localStorageService:LocalStorageService,\n              private sharedStorageService:SharedStorageService) {\n    this.initTypeStorage();\n    this.event = new BehaviorSubject({});\n  }\n\n  initTypeStorage() {\n    //  this.cookiesStorageService.set('ola', \"work\");\n    //  this.localStorageService.set(\"ola\",\"work\");\n    //   //  this.sharedStorageService.set(\"ola\",\"work\");\n    //   //  console.log(this.cookiesStorageService.get('ola'))\n    //   console.log(this.localStorageService.get('olaet'))\n    //  console.log(this.sharedStorageService.get('ola'))\n\n  }\n\n  get(typeStorage:string, key:string):string {\n    return this[typeStorage].get(key);\n\n  }\n\n  set(typeStorage:string, key:string, value:string):Observable<any> {\n    return this[typeStorage].set(key, value);\n  }\n\n\n  sub(typeStorage:string, key:string):Observable<any> {\n\n    this[typeStorage].observe()\n      .subscribe((event) => {\n        if (event.key == key) {\n          this.event.next({\"changeKey\": key})\n        }\n\n      });\n    return this.event;\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { WebStorageModule } from 'ngx-store';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class NgCoreModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { EventerService } from '../services/eventer.service';\nimport { EventMessage } from '../services/event-message';\n\nimport { Observable, throwError } from 'rxjs';\nimport { finalize, tap, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ServerErrorInterceptor implements HttpInterceptor {\n\n  constructor(\n    private eventer:EventerService\n  ) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler):Observable<HttpEvent<any>> {\n\n    return next.handle(req)\n      .pipe(\n        tap(\n          event => {\n            if(event instanceof HttpResponse) {\n\n              if(event.body.status && event.body.message) {\n                throw new Error(event.body.message[0]);\n              }\n\n            }\n          }\n        ),\n        catchError(this.handleError.bind(this))\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else if (error instanceof Error) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.message);\n\n      switch(error.message) {\n        case 'timeout-or-duplicate':\n          return throwError('ÐÑÐ¸Ð±ÐºÐ° ÑÐµÑÐ²ÐµÑÐ° (ÑÐ°Ð¹Ð¼Ð°ÑÑ). ÐÐ¾Ð²ÑÐ¾ÑÐ¸ÑÐµ Ð¿Ð¾Ð¿ÑÑÐºÑ Ð¿Ð¾Ð·Ð¶Ðµ');\n      }\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n\n      if(error.status == 401) {\n        this.eventer.emitMessageEvent(\n          new EventMessage('Unauthorized', '', '')\n        );\n\n        return throwError('ÐÐµÐ¾Ð±ÑÐ¾Ð´Ð¸Ð¼Ð¾ Ð¿ÑÐ¾Ð¹ÑÐ¸ Ð°Ð²ÑÐ¾ÑÐ¸Ð·Ð°ÑÐ¸Ñ');\n      }\n    }\n    // return an observable with a user-facing error message\n    return throwError(error.error);\n  };\n}","import { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { ServerErrorInterceptor } from './server-error.interceptor';\n\nexport const ngCoreHttpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: ServerErrorInterceptor, multi: true },\n];\n\n"],"names":[],"mappings":"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"}
