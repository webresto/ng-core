{"version":3,"file":"webresto-ng-core.umd.js","sources":["../src/lib/services/event-message.ts","../src/lib/services/eventer.service.ts","../src/lib/services/state.service.ts","../../src/lib/config.ts","../src/lib/services/net.service.ts","../src/lib/services/resto-storage.service.ts","../../src/lib/ng-core.module.ts","../src/lib/http-interceptors/server-error.interceptor.ts","../../../src/public_api.ts","../../../src/webresto-ng-core.ts"],"sourcesContent":["export class EventMessage {\r\n  type:string;\r\n  title:string;\r\n  body:string;\r\n\r\n  constructor(type, title, body) {\r\n    this.type = type;\r\n    this.title = title;\r\n    this.body = body;\r\n  }\r\n}\r\n","import { Injectable,EventEmitter } from '@angular/core';\r\nimport { EventMessage } from './event-message';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventerService {\r\n  eventMessage: EventEmitter<EventMessage> = new EventEmitter();\r\n  eventAction: EventEmitter<EventMessage> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  emitMessageEvent(message:EventMessage) {\r\n    this.eventMessage.emit(message);\r\n  }\r\n  emitActionEvent(action:EventMessage) {\r\n    this.eventAction.emit(action);\r\n  }\r\n\r\n\r\n  getMessageEmitter() {\r\n    return this.eventMessage;\r\n  }\r\n  getActionEmitter() {\r\n    return this.eventAction;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StateService {\r\n  maintenance$: BehaviorSubject<any>;\r\n\r\n  constructor() {\r\n    this.maintenance$ = new BehaviorSubject<any>(null);\r\n  }\r\n}\r\n","import { Inject,Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class Config {\r\n  url:any;\r\n  port:number = 80;\r\n  prefix:string = \"api/\";\r\n  versionModule = \"0.5\";\r\n\r\n  constructor(@Inject('ApiDomain') endpointUrl:BehaviorSubject<any>) {\r\n    endpointUrl.subscribe(url=>{\r\n      this.url = url;\r\n    })  \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '../config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { retry } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NetService {\r\n  constructor(private http: HttpClient, public config: Config) { }\r\n\r\n  public get<T = any>(url: string, isApi: boolean = true, options: {\r\n    headers?: { [header: string]: string },\r\n    params?: { [params: string]: string },\r\n  } = {}): Observable<T> {\r\n    url = isApi\r\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\r\n      : this.config.url + url;\r\n    return this.http.get<T>(url, { headers: options.headers, params: options.params })\r\n      .pipe(\r\n        retry(3) // retry a failed request up to 3 times\r\n      );\r\n  }\r\n\r\n  public put<T = any>(url: string, data: T, isApi: boolean = true): Observable<any> {\r\n\r\n    url = isApi\r\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\r\n      : this.config.url + url;\r\n\r\n    return this.http.put(url, data);\r\n\r\n  }\r\n\r\n  public post<T = any, R = any>(url: string, data: T, isApi: boolean = true, options: {\r\n    headers?: { [header: string]: string },\r\n    params?: { [params: string]: string }\r\n  } = {}): Observable<any> {\r\n\r\n    url = isApi\r\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\r\n      : this.config.url + url;\r\n\r\n    return this.http.post(url, data, { headers: options.headers, params: options.params });\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestoStorageService {\r\n  event:BehaviorSubject<any>;\r\n\r\n\r\n  constructor() {\r\n    this.initTypeStorage();\r\n    this.event = new BehaviorSubject({});\r\n  }\r\n\r\n  initTypeStorage() {\r\n    //  this.cookiesStorageService.set('ola', \"work\");\r\n    //  this.localStorageService.set(\"ola\",\"work\");\r\n    //   //  this.sharedStorageService.set(\"ola\",\"work\");\r\n    //   //  console.log(this.cookiesStorageService.get('ola'))\r\n    //   console.log(this.localStorageService.get('olaet'))\r\n    //  console.log(this.sharedStorageService.get('ola'))\r\n\r\n  }\r\n\r\n  get(typeStorage:string, key:string):string {\r\n    return this[typeStorage].get(key);\r\n\r\n  }\r\n\r\n  set(typeStorage:string, key:string, value:string):Observable<any> {\r\n    return this[typeStorage].set(key, value);\r\n  }\r\n\r\n\r\n  sub(typeStorage:string, key:string):Observable<any> {\r\n\r\n    this[typeStorage].observe()\r\n      .subscribe((event) => {\r\n        if (event.key == key) {\r\n          this.event.next({\"changeKey\": key})\r\n        }\r\n\r\n      });\r\n    return this.event;\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  providers:[],\r\n  exports: []\r\n})\r\nexport class NgCoreModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { EventerService } from '../services/eventer.service';\r\nimport { EventMessage } from '../services/event-message';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { StateService } from \"../services/state.service\";\r\nimport { element } from 'protractor';\r\n\r\nconst LS_TOKEN_NAME = 'gf:tkn:v2';\r\n\r\n@Injectable()\r\nexport class ServerErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private eventer: EventerService,\r\n    private state: StateService\r\n  ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    console.info('Interceptor', req);\r\n    const authToken = localStorage.getItem(LS_TOKEN_NAME);\r\n    return next.handle(!authToken ? req : req.clone({\r\n      headers: req.headers.set('Authorization', `JWT ${authToken}`)\r\n    })).pipe(\r\n      map(\r\n        event => {\r\n          if (event instanceof HttpResponse && event?.body?.message?.body && event?.body?.message?.title && event?.body?.message?.type) {\r\n            this.eventer.emitMessageEvent(\r\n              new EventMessage(event.body.message.type, event.body.message.title, event.body.message.body)\r\n            );\r\n          };\r\n          return event;\r\n        }\r\n      ),\r\n      catchError(err => this.handleError(err))\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error?.error?.enable && error?.error?.title && error?.error?.description && error?.error?.startDate && error?.error?.stopDate) {\r\n      const currentTime = new Date().getTime(),\r\n        startTime = new Date(error?.error?.startDate).getTime(),\r\n        stopTime = new Date(error?.error?.stopDate).getTime();\r\n      if (currentTime > startTime && currentTime < stopTime) {\r\n          this.state.maintenance$.next({\r\n            title: error.error.title,\r\n            description: error.error.description,\r\n            social: error.error.social\r\n          });\r\n      };\r\n      return throwError(error.error);\r\n    } else {\r\n      switch (true) {\r\n        case error?.error instanceof ErrorEvent: console.error('An error occurred:', error?.error?.message); return throwError(error?.error);;\r\n\r\n        case (error.error?.message == 'timeout-or-duplicate'):\r\n          console.error('An error occurred:', error?.message);\r\n          return throwError('Ошибка сервера (таймаут). Повторите попытку позже');\r\n\r\n        case (error.error?.message != 'timeout-or-duplicate'):\r\n          console.error(`Backend returned code ${error?.status}, ` + `body was: `, error?.error);\r\n          if (error?.status == 401 || (error?.status == 404 && error?.error == \"User not found\")) {\r\n            this.eventer.emitMessageEvent(\r\n              new EventMessage('Unauthorized', '', '')\r\n            );\r\n            localStorage.removeItem(LS_TOKEN_NAME);\r\n          };\r\n          if (error?.status == 400 && error?.error?.message?.title && error?.error?.message?.body) {\r\n            this.eventer.emitMessageEvent(\r\n              new EventMessage('error', error?.error?.message?.title, error?.error?.message?.body)\r\n            );\r\n          }\r\n          return throwError(error?.error);\r\n      };\r\n    };\r\n    // return an observable with a user-facing error message\r\n  };\r\n\r\n}","/*\r\n * Public API Surface of ng-core\r\n */\r\n\r\nexport * from './lib/services';\r\nexport * from './lib/ng-core.module';\r\nexport * from './lib/http-interceptors/server-error.interceptor';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EventEmitter","Injectable","BehaviorSubject","Inject","retry","NgModule","map","HttpResponse","catchError","throwError"],"mappings":"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"}