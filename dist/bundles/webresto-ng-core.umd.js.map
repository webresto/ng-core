{"version":3,"file":"webresto-ng-core.umd.js","sources":["../../src/lib/services/event-message.ts","../../src/lib/services/eventer.service.ts","../../src/lib/services/state.service.ts","../../src/lib/config.ts","../../src/lib/services/net.service.ts","../../src/lib/services/resto-storage.service.ts","../../src/lib/ng-core.module.ts","../../src/lib/http-interceptors/message.interceptor.ts","../../src/lib/http-interceptors/server-error.interceptor.ts","../../src/lib/http-interceptors/auth.interceptor.ts","../../src/public_api.ts","../../src/webresto-ng-core.ts"],"sourcesContent":["export class EventMessage {\r\n  type:string;\r\n  title:string;\r\n  body:string;\r\n\r\n  constructor(type, title, body) {\r\n    this.type = type;\r\n    this.title = title;\r\n    this.body = body;\r\n  }\r\n}\r\n","import { Injectable,EventEmitter } from '@angular/core';\r\nimport { EventMessage } from './event-message';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventerService {\r\n  eventMessage: EventEmitter<any> = new EventEmitter();\r\n  eventAction: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  emitMessageEvent(message:EventMessage) {\r\n    this.eventMessage.emit(message);\r\n  }\r\n  emitActionEvent(action:EventMessage) {\r\n    this.eventAction.emit(action);\r\n  }\r\n\r\n\r\n  getMessageEmitter() {\r\n    return this.eventMessage;\r\n  }\r\n  getActionEmitter() {\r\n    return this.eventAction;\r\n  }\r\n}\r\n","import { Injectable,EventEmitter } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StateService {\r\n  maintenance$: BehaviorSubject<any>;\r\n\r\n  constructor() {\r\n    this.maintenance$ = new BehaviorSubject<any>(null);\r\n  }\r\n}\r\n","import { Inject,Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class Config {\r\n  url:any;\r\n  port:number = 80;\r\n  prefix:string = \"api/\";\r\n  versionModule = \"0.5\";\r\n\r\n  constructor(@Inject('ApiDomain') endpointUrl:BehaviorSubject<any>) {\r\n    endpointUrl.subscribe(url=>{\r\n      this.url = url;\r\n    })  \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Config } from '../config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { retry } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NetService {\r\n  constructor(private http: HttpClient, public config: Config) {  }\r\n\r\n  public get<T=any>(url: string, isApi: boolean = true): Observable<T> {\r\n    url = isApi\r\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\r\n      : this.config.url + url;\r\n    return this.http.get<T>(url)\r\n      .pipe(\r\n        retry(3) // retry a failed request up to 3 times\r\n      );\r\n  }\r\n\r\n  public put<T=any>(url: string, data: T, isApi: boolean = true): Observable<any> {\r\n\r\n    url = isApi\r\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\r\n      : this.config.url + url;\r\n\r\n    return this.http.put(url, data);\r\n\r\n  }\r\n\r\n  public post<T=any>(url: string, data: T, isApi: boolean = true): Observable<any> {\r\n\r\n    url = isApi\r\n      ? this.config.url + this.config.prefix + this.config.versionModule + url\r\n      : this.config.url + url;\r\n\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CookiesStorageService, LocalStorageService,\r\n  SharedStorageService, NgxStorageEvent\r\n} from 'ngx-store';\r\n\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestoStorageService {\r\n  event:BehaviorSubject<any>;\r\n\r\n\r\n  constructor(private cookiesStorageService:CookiesStorageService,\r\n              private localStorageService:LocalStorageService,\r\n              private sharedStorageService:SharedStorageService) {\r\n    this.initTypeStorage();\r\n    this.event = new BehaviorSubject({});\r\n  }\r\n\r\n  initTypeStorage() {\r\n    //  this.cookiesStorageService.set('ola', \"work\");\r\n    //  this.localStorageService.set(\"ola\",\"work\");\r\n    //   //  this.sharedStorageService.set(\"ola\",\"work\");\r\n    //   //  console.log(this.cookiesStorageService.get('ola'))\r\n    //   console.log(this.localStorageService.get('olaet'))\r\n    //  console.log(this.sharedStorageService.get('ola'))\r\n\r\n  }\r\n\r\n  get(typeStorage:string, key:string):string {\r\n    return this[typeStorage].get(key);\r\n\r\n  }\r\n\r\n  set(typeStorage:string, key:string, value:string):Observable<any> {\r\n    return this[typeStorage].set(key, value);\r\n  }\r\n\r\n\r\n  sub(typeStorage:string, key:string):Observable<any> {\r\n\r\n    this[typeStorage].observe()\r\n      .subscribe((event) => {\r\n        if (event.key == key) {\r\n          this.event.next({\"changeKey\": key})\r\n        }\r\n\r\n      });\r\n    return this.event;\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { WebStorageModule } from 'ngx-store';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  providers:[],\r\n  exports: []\r\n})\r\nexport class NgCoreModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { EventerService } from '../services/eventer.service';\r\nimport { EventMessage } from '../services/event-message';\r\nimport { map } from 'rxjs/operators';\r\nimport { StateService } from \"../services/state.service\";\r\n\r\n@Injectable()\r\nexport class MessageInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private eventer: EventerService,\r\n    private state: StateService\r\n  ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n    return next.handle(req)\r\n      .pipe(\r\n        map(\r\n          event => {\r\n            if (event instanceof HttpResponse && event.body?.enable\r\n              && typeof event.body.title !== 'undefined'\r\n              && typeof event.body.description !== 'undefined'\r\n              && typeof event.body.startDate !== 'undefined'\r\n              && typeof event.body.stopDate !== 'undefined') {\r\n              const currentTime = new Date().getTime(),\r\n                startTime = new Date(event.body.startDate).getTime(),\r\n                stopTime = new Date(event.body.stopDate).getTime();\r\n\r\n              if (currentTime > startTime && currentTime < stopTime) {\r\n                this.state.maintenance$.next({\r\n                  title: event.body.title,\r\n                  description: event.body.description\r\n                });\r\n              }\r\n            } else if (event instanceof HttpResponse && event?.body?.message?.body && event?.body?.message?.title && event?.body?.message?.type) {\r\n              this.eventer.emitMessageEvent(\r\n                new EventMessage(event.body.message.type, event.body.message.title, event.body.message.body)\r\n              );\r\n            };\r\n            return event;\r\n          })\r\n      );\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { EventerService } from '../services/eventer.service';\r\nimport { EventMessage } from '../services/event-message';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { StateService } from \"../services/state.service\";\r\n\r\n@Injectable()\r\nexport class ServerErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private eventer: EventerService,\r\n    private state: StateService\r\n  ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(req)\r\n      .pipe(\r\n        tap(\r\n          event => {\r\n            if (event instanceof HttpResponse) {\r\n              if (event.body.status && event.body.message && event.body.message[0]) {\r\n                throw new Error(event.body.message[0]);\r\n              }\r\n            }\r\n          }\r\n        ),\r\n        catchError(this.handleError.bind(this))\r\n      );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n\r\n    if (error.error.enable\r\n      && typeof error.error.title !== 'undefined'\r\n      && typeof error.error.description !== 'undefined'\r\n      && typeof error.error.startDate !== 'undefined'\r\n      && typeof error.error.stopDate !== 'undefined') {\r\n\r\n      const currentTime = new Date().getTime(),\r\n        startTime = new Date(error.error.startDate).getTime(),\r\n        stopTime = new Date(error.error.stopDate).getTime();\r\n\r\n      if (currentTime > startTime && currentTime < stopTime) {\r\n        this.state.maintenance$.next({\r\n          title: error.error.title,\r\n          description: error.error.description,\r\n          social: error.error.social\r\n        });\r\n      }\r\n\r\n      return throwError(error.error);\r\n    }\r\n\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else if (error instanceof Error) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.message);\r\n\r\n      switch (error.message) {\r\n        case 'timeout-or-duplicate':\r\n          return throwError('Ошибка сервера (таймаут). Повторите попытку позже');\r\n      }\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n\r\n      if (error.status == 401) {\r\n        this.eventer.emitMessageEvent(\r\n          new EventMessage('Unauthorized', '', '')\r\n        );\r\n\r\n        return throwError(\r\n          error.error && error.error.title\r\n            ? error.error.title\r\n            : 'Необходимо пройти авторизацию'\r\n        );\r\n      } else if ((error.status == 400 || error.status == 500)\r\n        && error.error\r\n        && error.error.message\r\n        && error.error.message.title\r\n        && error.error.message.body) {\r\n        this.eventer.emitMessageEvent(\r\n          new EventMessage('error', error.error.message.title, error.error.message.body)\r\n        );\r\n      }\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(error.error);\r\n  };\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nconst LS_TOKEN_NAME = 'gf:tkn:v2';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n    console.info('AuthInterceptor', req);\r\n\r\n    // Get the auth token from the service.\r\n    const authToken = localStorage.getItem(LS_TOKEN_NAME);\r\n\r\n    if (authToken) {\r\n      // Clone the request and replace the original headers with\r\n      // cloned headers, updated with the authorization.\r\n      const authReq = req.clone({\r\n        headers: req.headers.set('Authorization', `JWT ${authToken}`)\r\n      });\r\n\r\n      // send cloned request with header to the next handler.\r\n      return next.handle(authReq);\r\n\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n}","/*\r\n * Public API Surface of ng-core\r\n */\r\n\r\nexport * from './lib/services';\r\nexport * from './lib/ng-core.module';\r\nexport * from './lib/http-interceptors/message.interceptor';\r\nexport * from './lib/http-interceptors/server-error.interceptor';\r\nexport * from './lib/http-interceptors/auth.interceptor';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EventEmitter","Injectable","BehaviorSubject","Inject","retry","NgModule","map","HttpResponse","tap","catchError","throwError"],"mappings":"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"}